<Page x:Class="Wp.WpfDemo.UIL.Views.Pages.HomePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:radioButtonConverter="clr-namespace:Wp.WpfDemo.BLL.Converters;assembly=Wp.WpfDemo.BLL"
      xmlns:vm="clr-namespace:Wp.WpfDemo.UIL.ViewModels.Pages"
      xmlns:uc="clr-namespace:Wp.WpfDemo.UIL.Views.UserControls"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      xmlns:wpc="clr-namespace:Wp.WpfDemo.WpThemes;assembly=Wp.WpfDemo.WpThemes"
      mc:Ignorable="d"
      Title="HomePage"
      d:DesignHeight="966"
      d:DesignWidth="1641"
      Style="{DynamicResource  MianWindowPageStyle}">
    <Page.DataContext>
        <vm:HomePageVM />
    </Page.DataContext>
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/GeometryStyles/LettersAndNumbers.xaml" />
                <ResourceDictionary Source="/Styles/SolidColorBrushStyles.xaml" />
                <ResourceDictionary Source="/Styles/ColorStyles.xaml" />
                <ResourceDictionary Source="/Styles/PageStyles.xaml" />
                <ResourceDictionary Source="/Styles/BorderStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <radioButtonConverter:RadioButtonConverter x:Key="radioButtonConverter" />
        </ResourceDictionary>
    </Page.Resources>
    <Border Style="{StaticResource  PageBorderStyle}">
        <hc:TabControl IsAnimationEnabled="True"
                       IsDraggable="True"
                       IsTabFillEnabled="True"
                       Margin="20">
            <hc:TabItem Header="TabItem7"
                        IsSelected="True"
                        Height="30"
                        Margin="0,0,0,0.4"
                        VerticalAlignment="Bottom">
                <Grid Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TabControl Margin="10"
                                Style="{StaticResource TabControlInLine}">
                        <TabItem Header="选项卡1"></TabItem>
                        <TabItem Header="选项卡2"></TabItem>
                        <TabItem Header="选项卡3"></TabItem>
                    </TabControl>
                    <materialDesign:Card Grid.Row="0"
                                         Grid.Column="1"
                                         Margin="10"
                                         UniformCornerRadius="3"
                                         Background="{DynamicResource MaterialDesignBackground}">
                        <Expander HorizontalAlignment="Stretch"
                                  BorderBrush="White"
                                  Foreground="Green"
                                  IsExpanded="False"
                                  Background="White">
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="/Resources/Naruto0.jpg"
                                           Height="20"
                                           Width="20">
                                        <Image.Clip>
                                            <EllipseGeometry RadiusX="10"
                                                             RadiusY="10"
                                                             Center="10,6" />
                                        </Image.Clip>
                                    </Image>
                                    <TextBlock Text="123"
                                               VerticalAlignment="Center" />
                                    <TextBlock Text="2323"
                                               VerticalAlignment="Center" />
                                </StackPanel>
                            </Expander.Header>
                            <StackPanel Orientation="Vertical"
                                        TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                                        Margin="24,8,24,16">
                                <TextBlock Text="Your Content" />
                                <TextBlock Opacity=".68"
                                           Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </Expander>
                    </materialDesign:Card>
                    <StackPanel Grid.Column="2"
                                Grid.Row="0"
                                Orientation="Vertical"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                        <TextBlock Text="旋转"
                                   x:Name="TestRender"
                                   Cursor="Hand"
                                   FontSize="20"
                                   VerticalAlignment="Center"
                                   RenderTransformOrigin="0.5,0.5">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="0" />
                            </TextBlock.RenderTransform>
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetName="TestRender"
                                                                            Storyboard.TargetProperty="RenderTransform.Angle">
                                                <SplineDoubleKeyFrame Value="0"
                                                                      KeyTime="0:0:0" />
                                                <SplineDoubleKeyFrame Value="180"
                                                                      KeyTime="0:0:0.5" />
                                                <SplineDoubleKeyFrame Value="360"
                                                                      KeyTime="0:0:1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers></TextBlock>
                        <TextBlock Text="消失"
                                   x:Name="TestOpacity"
                                   Cursor="Hand"
                                   FontSize="20"
                                   VerticalAlignment="Center">
                            <!--<TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="False">
                                            <Setter Property="Opacity"
                                                    Value="1" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>-->
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="TestOpacity"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="1"
                                                             To="0.2"
                                                             Duration="0:0:1"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="TestOpacity"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="1"
                                                             To="1"
                                                             Duration="0:0:00.1"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers></TextBlock>
                        <!--<TextBlock Text="shijian"
                                   x:Name="TestTime">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames  Storyboard.TargetName="TestTime"
                                                                            Storyboard.TargetProperty="RenderTransform.Angle">
                                                <SplineDoubleKeyFrame Value="0"
                                                                      KeyTime="0:0:0" />
                                                <SplineDoubleKeyFrame Value="180"
                                                                      KeyTime="0:0:0.5" />
                                                <SplineDoubleKeyFrame Value="360"
                                                                      KeyTime="0:0:1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers></TextBlock>-->
                    </StackPanel>
                    <Image Source="/Resources/Naruto0.jpg"
                           Grid.Row="1"
                           Grid.Column="0"
                           Height="auto"
                           Width="auto">
                        <Image.Clip>
                            <EllipseGeometry RadiusX="50"
                                             RadiusY="50"
                                             Center="100,90" />
                        </Image.Clip>
                    </Image>
                    <StackPanel Grid.Column="1"
                                Grid.Row="1"
                                VerticalAlignment="Center"
                                Background="White">
                        <RadioButton IsChecked="{Binding TestRadioButton ,Mode=TwoWay, Converter={StaticResource radioButtonConverter},ConverterParameter=0}"
                                     Content="参数1" />
                        <RadioButton IsChecked="{Binding TestRadioButton ,Mode=TwoWay, Converter={StaticResource radioButtonConverter},ConverterParameter=1}"
                                     Content="参数2" />
                        <RadioButton IsChecked="{Binding TestRadioButton ,Mode=TwoWay, Converter={StaticResource radioButtonConverter},ConverterParameter=2}"
                                     Content="参数3" />
                        <RadioButton IsChecked="{Binding TestRadioButton ,Mode=TwoWay, Converter={StaticResource radioButtonConverter},ConverterParameter=3}"
                                     Content="参数4" />
                        <Button Command="{Binding TestRadioButtonCmd}">test</Button>
                    </StackPanel>
                    <StackPanel Grid.Column="2"
                                Grid.Row="1"
                                Orientation="Vertical"
                                Background="White">
                        <WrapPanel x:Name="ChipPanel"
                                   Height="auto"
                                   Width="300">
                            <materialDesign:Chip Content="James Willock"
                                                 IsDeletable="True"
                                                 Background="White"
                                                 BorderBrush="Black"
                                                 BorderThickness="3"
                                                 DeleteCommand="{Binding DeleteChipCmd}"
                                                 DeleteCommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                 IconBackground="Red"
                                                 ToolTip="Just a tool tip"
                                                 DeleteToolTip="Your friendly neighbour delete button">
                                <materialDesign:Chip.Icon>
                                    <Image Source="/Resources/Naruto0.jpg" />
                                </materialDesign:Chip.Icon>
                            </materialDesign:Chip>
                            <materialDesign:Chip Content="James Willock1212"
                                                 IsDeletable="True"
                                                 Background="White"
                                                 BorderBrush="Black"
                                                 BorderThickness="3"
                                                 DeleteCommand="{Binding TestDeleteChipCmd}"
                                                 DeleteCommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                                 IconBackground="Red"
                                                 ToolTip="Just a tool tip"
                                                 DeleteToolTip="Your friendly neighbour delete button">
                                <!--<materialDesign:Chip.DeleteCommandParameter>
                                <MultiBinding Converter="">
                                    <Binding ElementName="ChipPanel" />
                                    <Binding RelativeSource="{RelativeSource Mode=Self}" />
                                </MultiBinding>
                            </materialDesign:Chip.DeleteCommandParameter>-->
                                <materialDesign:Chip.Icon>
                                    <Image Source="/Resources/Naruto0.jpg"></Image>
                                </materialDesign:Chip.Icon>
                            </materialDesign:Chip>
                        </WrapPanel>
                        <Button Command="{Binding AddChipCmd}"
                                CommandParameter="{Binding ElementName=ChipPanel}">添加Chip</Button>
                    </StackPanel>
                    <materialDesign:PopupBox Grid.Column="0"
                                             Grid.Row="2"
                                             Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Bottom">
                        <StackPanel>
                            <Button ToolTip="GitHub"
                                    Content="{materialDesign:PackIcon Kind=Github, Size=20}" />
                            <Button ToolTip="Twitter"
                                    Background="{DynamicResource PrimaryHueMidBrush}"
                                    Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                    Content="{materialDesign:PackIcon Kind=Twitter, Size=20}" />
                        </StackPanel>
                    </materialDesign:PopupBox>
                    <Grid Grid.Row="2"
                          Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0"
                              x:Name="TestPrinter">
                            <TextBlock Text="TestPrinter"
                                       FontSize="70" />
                        </Grid>
                        <Button Grid.Row="1"
                                Background="LightBlue"
                                Content="打印"
                                FontSize="26"
                                Height="auto"
                                Click="Button_Click" />
                    </Grid>
                    <wpc:CustomControl1 Grid.Column="2"
                                        Grid.Row="2"
                                        TestColor="Red" />
                </Grid>
            </hc:TabItem>
            <hc:TabItem Header="滚动数字">
                <uc:RollingNumber></uc:RollingNumber>
            </hc:TabItem>
        </hc:TabControl>
    </Border>
</Page>